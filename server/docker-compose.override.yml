version: '3.4'

services:
  webclient:
    build:
      context: ../client
      dockerfile: Dockerfile
    depends_on:
      - apigateway
      - appcore.identity.api
      - appcore.core.api
      - emqx
    ports:
      - "4200:80"
    networks:
      - AppCoreLocalDockerNetwork
      
  apigateway:
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerLocal
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - appcore.identity.api
      - appcore.core.api
    ports:
      - "20000:20000"
    networks:
      - AppCoreLocalDockerNetwork
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro

  appcore.identity.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerLocal
      - "AppSetting:ConnectionStrings:DefaultConnection=Server=postgresdata;Port=5432;Database=DB_Local;User Id=admin;Password=admin;"
      - "Kestrel:Endpoints:HttpWebApi:Url=http://0.0.0.0:20001"
      - "Kestrel:Endpoints:gRPC:Url=http://0.0.0.0:21101"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - postgresdata
      - kibana
    ports:
      - "20001:20001"
      - "21101:21101"
    networks:
      - AppCoreLocalDockerNetwork
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
  
  appcore.core.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerLocal
      - "AppSetting:ConnectionStrings:DefaultConnection=Server=postgresdata;Port=5432;Database=DB_Local;User Id=admin;Password=admin;"
      - "Kestrel:Endpoints:HttpWebApi:Url=http://0.0.0.0:20002"
      - "Kestrel:Endpoints:gRPC:Url=http://0.0.0.0:21102"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
      - "CacheSettings:RedisConnectionString=redis:6379,abortConnect=false,ssl=false,password=,syncTimeout=5000,name=SCIT_Local"
      - "MQTTClientSettings:Broker=emqx"
    depends_on:
      - postgresdata
      - kibana
      - redis
      - emqx
    ports:
      - "20002:20002"
      - "21102:21102"
    networks:
      - AppCoreLocalDockerNetwork
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro

  postgresdata:
    container_name: postgresdata
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=DB_Local
    restart: always
    networks:
      - AppCoreLocalDockerNetwork
    volumes:
      - postgresdata:/var/lib/postgresql/data/

  elasticsearch:
    container_name: elasticsearch
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - AppCoreLocalDockerNetwork
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data   

  kibana:
    container_name: kibana
    environment:        
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - AppCoreLocalDockerNetwork
  
  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@AppCore.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    restart: always
    ports:
        - "5050:80"
    networks:
      - AppCoreLocalDockerNetwork
    volumes:
      - pgadmin_data:/root/.pgadmin

  emqx:
    image: emqx/emqx:latest
    container_name: emqx
    ports:
      - "1883:1883"
      - "8083:8083"
      - "8084:8084"
      - "8883:8883"
      - "18083:18083"
    networks:
      - AppCoreLocalDockerNetwork
      
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - AppCoreLocalDockerNetwork